services:
  traefik:
    image: "traefik:3"
    # build: ./traefik/
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  postgres:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: Kennwort1
      POSTGRES_USER: admin
    volumes:
      - postgres:/var/lib/postgresql/data

  pgadmin4:
    image: elestio/pgadmin:REL-9_8
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: Kennwort1
      PGADMIN_LISTEN_PORT: 80
      SCRIPT_NAME: /pgadmin
    # ports:
    #   - 8081:80
    volumes:
      - pgadmin4:/var/lib/pgadmin
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.entrypoints=web
      - traefik.http.routers.pgadmin.service=pgadmin
      - traefik.http.services.pgadmin.loadbalancer.server.port=80
      - traefik.http.routers.pgadmin.rule=(Host(`localhost`) && PathPrefix(`/pgadmin`))

  code:
    build: ./code/
    environment:
      - DOCKER_MODS=
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Vienna
      - SUDO_PASSWORD=password #optional
      - DEFAULT_WORKSPACE=/workspace #optional
      - PORT=8443
    volumes:
      - "./workspace:/workspace"

    # ports:
    #   - 8443:8443
    restart: unless-stopped

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.code-router.rule=PathPrefix(`/code/`)"
      - "traefik.http.middlewares.code-strip.stripprefix.prefixes=/code"
      - "traefik.http.middlewares.code-strip.stripprefix.forceSlash=false"
      - "traefik.http.routers.code-router.middlewares=code-strip"

  api:
    build: ./api/

    volumes:
      - "./workspace/:/workspace"

    ports:
      - 8082:80

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-router.rule=PathPrefix(`/api/`)"
      - "traefik.http.middlewares.api-strip.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.api-strip.stripprefix.forceSlash=false"
      - "traefik.http.routers.api-router.middlewares=api-strip"

volumes:
  postgres:
  pgadmin4:
